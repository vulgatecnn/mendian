# 好饭碗门店管理系统 - 轻量级前端 Dockerfile
# 构建体积 < 20MB，适合生产环境快速部署

# ============================================================================
# 构建阶段 - 编译前端资源
# ============================================================================
FROM node:18-alpine AS builder

WORKDIR /app

# 优化层缓存 - 先复制 package 文件
COPY package*.json pnpm-lock.yaml* yarn.lock* ./

# 安装构建依赖
RUN if [ -f yarn.lock ]; then \
    yarn install --frozen-lockfile --production=false; \
  elif [ -f pnpm-lock.yaml ]; then \
    npm install -g pnpm && pnpm install --frozen-lockfile; \
  else \
    npm ci; \
  fi

# 复制源码并构建
COPY . .

# 构建应用 (支持多种构建工具)
RUN if [ -f "vite.config.js" ] || [ -f "vite.config.ts" ]; then \
    npm run build; \
  elif [ -f "webpack.config.js" ]; then \
    npm run build; \
  else \
    npm run build; \
  fi

# 验证构建结果
RUN ls -la dist/ || ls -la build/ || (echo "❌ 构建失败：找不到输出目录" && exit 1)

# ============================================================================
# 生产阶段 - 轻量级 Nginx 镜像
# ============================================================================
FROM nginx:1.25-alpine

# 安装基本工具
RUN apk add --no-cache \
    ca-certificates \
    tzdata \
    && update-ca-certificates

# 设置时区
ENV TZ=Asia/Shanghai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# 创建nginx用户 (如果不存在)
RUN addgroup -g 101 -S nginx || true
RUN adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx || true

# 复制构建产物
COPY --from=builder /app/dist/ /usr/share/nginx/html/ 2>/dev/null || \
COPY --from=builder /app/build/ /usr/share/nginx/html/

# 复制 Nginx 配置
COPY frontend/docker/nginx.simple.conf /etc/nginx/nginx.conf
COPY frontend/docker/default.simple.conf /etc/nginx/conf.d/default.conf

# 设置权限
RUN chmod -R 755 /usr/share/nginx/html \
    && chown -R nginx:nginx /usr/share/nginx/html \
    && chmod 644 /etc/nginx/nginx.conf \
    && chmod 644 /etc/nginx/conf.d/default.conf

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

# 构建元数据
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION=latest

LABEL maintainer="好饭碗开发团队" \
      org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.name="mendian-frontend" \
      org.label-schema.description="好饭碗门店生命周期管理系统 - 前端应用" \
      org.label-schema.url="https://github.com/vulgatecnn/mendian" \
      org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.vcs-url="https://github.com/vulgatecnn/mendian" \
      org.label-schema.version=$VERSION \
      org.label-schema.schema-version="1.0"

# 暴露端口
EXPOSE 80

# 使用非特权用户运行
USER nginx

# 启动 Nginx
CMD ["nginx", "-g", "daemon off;"]