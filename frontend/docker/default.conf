# 好饭碗门店管理系统前端站点配置

# 上游后端服务配置 (生产环境中应该指向实际的后端服务)
upstream backend {
    server backend:7900;
    # 如果使用多个后端实例
    # server backend-2:7900;
    # server backend-3:7900;
}

# 主服务器配置
server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # 日志配置
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # 错误页面
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;

    # 安全设置
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 健康检查端点
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    # 版本信息端点
    location /version {
        alias /usr/share/nginx/html/version.json;
        add_header Content-Type application/json;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # API 代理到后端
    location /api/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 缓冲设置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # 错误处理
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_timeout 30s;
        proxy_next_upstream_tries 3;
    }

    # 静态资源缓存设置
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # 跨域设置 (如果需要)
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        
        # 优化设置
        tcp_nodelay off;
        tcp_nopush on;
    }

    # 特殊文件缓存设置
    location ~* \.(manifest|json)$ {
        expires 1h;
        add_header Cache-Control "public";
    }

    # 主应用路由 - SPA 支持
    location / {
        try_files $uri $uri/ @fallback;
        
        # 防止缓存 HTML 文件
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }

    # SPA 路由回退
    location @fallback {
        rewrite ^.*$ /index.html last;
    }

    # robots.txt
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # favicon.ico
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    # 压缩配置
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        gzip_static on;
        expires 1y;
        add_header Cache-Control public;
        add_header Vary Accept-Encoding;
    }

    # 开发工具相关 (生产环境应该移除)
    location ~* \.(map)$ {
        return 404;
    }

    # 安全相关
    location ~* \.(yml|yaml|config|env|log)$ {
        deny all;
        return 404;
    }
}

# HTTPS 配置示例 (如果需要 SSL)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#     
#     ssl_certificate /etc/ssl/certs/your-domain.crt;
#     ssl_certificate_key /etc/ssl/private/your-domain.key;
#     
#     # SSL 优化配置
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE+AESGCM:ECDHE+AES256:ECDHE+AES128:!aNULL:!MD5:!DSS;
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # HSTS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     
#     # 其他配置与 HTTP 相同...
# }